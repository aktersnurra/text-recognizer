[tool.poetry]
name = "text-recognizer"
version = "0.1.0"
authors = ["aktersnurra <gustaf.rydholm@gmail.com>"]
description = "A text recognizer using best pratices in python and deep learning."
license = "MIT"
readme = "README.md"
homepage = "https://github.com/aktersnurra/text-recognizer"
repository = "https://github.com/aktersnurra/text-recognizer"
keywords = ["text recognizer, deep learning, pytorch"]

[tool.poetry.dependencies]
python = "^3.8"
click = "^7.1.2"
flake8-annotations = "^2.1.0"
flake8-docstrings = "^1.5.0"
darglint = "^1.3.1"
desert = "^2020.1.6"
marshmallow = "^3.6.0"
sphinx-autodoc-typehints = "^1.10.3"
sphinx_rtd_theme = "^0.4.3"
boltons = "^20.1.0"
h5py = "^3.2.1"
toml = "^0.10.1"
torch = "^1.8.0"
torchvision = "^0.9.0"
loguru = "^0.5.0"
matplotlib = "^3.2.1"
tqdm = "^4.46.1"
pytest = "^5.4.3"
opencv-python = "^4.3.0"
nltk = "^3.5"
torch-summary = "^1.4.2"
python-Levenshtein = "^0.12.0"
defusedxml = "^0.6.0"
pytorch-metric-learning = "^0.9.92"
omegaconf = "^2.0.2"
jupyterthemes = "^0.20.0"
wandb = "^0.10.12"
einops = "^0.3.0"
gtn = "^0.0.0"
sentencepiece = "^0.1.95"
pytorch-lightning = "^1.2.4"

[tool.poetry.dev-dependencies]
pytest = "^5.4.2"
coverage = {extras = ["toml"], version = "^5.1"}
pytest-cov = "^2.9.0"
pytest-mock = "^3.1.0"
black = "^19.10b0"
flake8 = "^3.8.2"
flake8-bandit = "^2.1.2"
flake8-black = "^0.2.0"
flake8-bugbear = "^20.1.4"
flake8-import-order = "^0.18.1"
safety = "^1.9.0"
mypy = "^0.770"
pytype = {version = "^2020.5.13", python = "3.7"}
typeguard = "^2.7.1"
xdoctest = "^0.12.0"
sphinx = "^3.0.4"
jupyter = "^1.0.0"
gpustat = "^0.6.0"
redlock-py = "^1.0.8"
wandb = "^0.10.11"
graphviz = "^0.16"
scipy = "^1.6.1"

[tool.coverage.report]
fail_under = 50

[tool.poetry.scripts]
download-emnist = "text_recognizer.data.emnist:download_emnist"
generate-emnist-lines = "text_recognizer.data.emnist_lines:generate_emnist_lines"
download-iam = "text_recognizer.data.iam:download_iam"
create-emnist-support-files = "text_recognizer.tests.support.create_emnist_support_files:create_emnist_support_files"
create-emnist-lines-datasets = "text_recognizer.datasets.emnist_lines_dataset:create_datasets"
create-iam-paragraphs = "text_recognizer.datasets.iam_paragraphs_dataset:main"
prepare-experiments = "training.prepare_experiments:run_cli"
run-experiment = "training.run_experiment:run_cli"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
